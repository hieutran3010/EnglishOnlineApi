// <auto-generated />
using System;
using EnglishZone.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace EnglishZone.Data.Migrations
{
    [DbContext(typeof(EnglishZoneDbContext))]
    partial class EnglishZoneDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:PostgresExtension:citext", ",,")
                .HasAnnotation("Npgsql:PostgresExtension:uuid-ossp", ",,")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("EnglishZone.Data.Entities.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v1mc()");

                    b.Property<string>("Content")
                        .HasColumnName("content")
                        .HasColumnType("citext");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnName("createdby")
                        .HasColumnType("citext");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createdon")
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("timezone('utc'::text, now())");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnName("modifiedby")
                        .HasColumnType("citext");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("modifiedon")
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("timezone('utc'::text, now())");

                    b.Property<string>("Owner")
                        .HasColumnName("owner")
                        .HasColumnType("citext");

                    b.HasKey("Id")
                        .HasName("pk_post");

                    b.HasIndex("Owner")
                        .HasName("ix_post_owner");

                    b.ToTable("post");
                });

            modelBuilder.Entity("EnglishZone.Data.Entities.PostComment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("uuid")
                        .HasDefaultValueSql("uuid_generate_v1mc()");

                    b.Property<string>("Content")
                        .HasColumnName("content")
                        .HasColumnType("citext");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnName("createdby")
                        .HasColumnType("citext");

                    b.Property<DateTimeOffset>("CreatedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("createdon")
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("timezone('utc'::text, now())");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnName("modifiedby")
                        .HasColumnType("citext");

                    b.Property<DateTimeOffset>("ModifiedOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("modifiedon")
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValueSql("timezone('utc'::text, now())");

                    b.Property<string>("Owner")
                        .HasColumnName("owner")
                        .HasColumnType("citext");

                    b.Property<Guid>("PostId")
                        .HasColumnName("postid")
                        .HasColumnType("uuid");

                    b.HasKey("Id")
                        .HasName("pk_postcomment");

                    b.HasIndex("Owner")
                        .HasName("ix_postcomment_owner");

                    b.HasIndex("PostId")
                        .HasName("ix_postcomment_postid");

                    b.ToTable("postcomment");
                });

            modelBuilder.Entity("EnglishZone.Data.Entities.PostComment", b =>
                {
                    b.HasOne("EnglishZone.Data.Entities.Post", "Post")
                        .WithMany("PostComments")
                        .HasForeignKey("PostId")
                        .HasConstraintName("fk_postcomment_post_postid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
